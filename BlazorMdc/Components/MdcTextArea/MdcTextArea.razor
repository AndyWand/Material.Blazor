@namespace BlazorMdc
@inherits MdcInputComponentBase<string>


<div @ref="ElementReference"
     @attributes="@AttributesToSplat(SplatType.ClassAndStyleOnly)">
    
    @if (AppliedTextInputStyle == MdcTextInputStyle.Filled || AppliedTextInputStyle == MdcTextInputStyle.FullWidth)
    {
        <div class="mdc-text-field__ripple"></div>
    }

    <textarea id="@id"
              class="mdc-text-field__input @AppliedTextInputStyleClass @FieldClass"
              @bind="@ReportingValue"
              aria-labelledby="@labelId"
              rows="@Rows"
              cols="@Cols"
              disabled="@Disabled"
              @attributes="@AttributesToSplat(SplatType.ExcludeClassAndStyle)" />

    @if (AppliedTextInputStyle == MdcTextInputStyle.Outlined)
    {
        <div class="mdc-notched-outline">
            <div class="mdc-notched-outline__leading"></div>
            <div class="mdc-notched-outline__notch">
                <label class="mdc-floating-label @FloatingLabelClass" for="@id" id="@labelId">@Label</label>
            </div>
            <div class="mdc-notched-outline__trailing"></div>
        </div>
    }
    else
    {
        @if (AppliedTextInputStyle == MdcTextInputStyle.Filled)
        {
            <label class="mdc-floating-label @FloatingLabelClass" for="@id" id="@labelId">@Label</label>
        }

        <div class="mdc-line-ripple"></div>
    }
</div>

@code {
    //
    //  2020-04-02  Mark Stega
    //              Changed to use class & style mappers
    //
    //  2020-04-13  Mark Stega
    //              Moved ClassMapper to constructor
    //

}
