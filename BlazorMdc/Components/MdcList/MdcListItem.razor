@namespace BlazorMdc

<div class="bmdc-disabled-container">
    @if (Disabled)
    {
        <div class="bmdc-disabled-overlay"></div>
    }

    <li class="mdc-list-item @disabledClass" role="menuitem" @onclick="InternalClickHandler" disabled="@Disabled">
        @if (!(Icon is null))
        {
            <span class="mdc-list-item__graphic mdc-menu__selection-group-icon">
                <i class="material-icons">@Icon</i>
            </span>
        }
        <span class="mdc-list-item__text">@Text</span>
    </li>
</div>

@code {
    //
    //  2020-04-02  Mark Stega
    //              Renamed from MdcMenuListItem
    //              Added NavRef parameter
    //
    [CascadingParameter] MdcDrawer Drawer { get; set; }
    [Parameter] public string Text { get; set; }
    [Parameter] public string NavigationReference { get; set; } = "";
    [Parameter] public string? Icon { get; set; }
    [Parameter] public bool Disabled { get; set; }
    [Parameter] public bool IsSelectionItem { get; set; }
    [Parameter] public EventCallback<string> OnClick { get; set; }

    private string disabledClass => Disabled ? " mdc-list-item--disabled" : "";

    protected void InternalClickHandler()
    {
        // If we're nested inside a drawer, auto-close it when navigating
        Drawer?.NotifyNavigation();
        OnClick.InvokeAsync(NavigationReference);
    }
}