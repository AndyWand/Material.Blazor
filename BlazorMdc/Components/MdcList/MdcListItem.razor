@namespace BlazorMdc

@inherits MdcComponentBase

<li role="menuitem"
    @onclick="InternalClickHandler"
    class="@ClassMapper.AsString()"
    style="@StyleMapper.AsString()">

    @if (!(LeadingIcon is null))
    {
        <span class="mdc-list-item__graphic mdc-menu__selection-group-icon">
            <i class="material-icons">@LeadingIcon </i>
        </span>
    }
    <span class="mdc-list-item__text">@Text</span>
</li>

@code {
    //
    //  2020-04-02  Mark Stega
    //              Renamed from MdcMenuListItem
    //              Added NavRef parameter
    //
    //  2020-04-04  Mark Stega
    //              Use ClassMapper
    //              Refined disabled handling
    //              Removed Drawer actions, this really did not belong in this class
    //
    [Parameter] public string Text { get; set; }
    [Parameter] public string NavigationReference { get; set; } = "";
    [Parameter] public string? LeadingIcon { get; set; }
    [Parameter] public bool IsSelectionItem { get; set; }
    [Parameter] public EventCallback<string> OnClick { get; set; }

    private bool IsFirstParametersSet = true;
    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (IsFirstParametersSet)
        {
            IsFirstParametersSet = false;

            ClassMapper
                .Add("mdc-list-item")
                .If("mdc-list-item--disabled", () => Disabled);
        }
    }

    protected void InternalClickHandler()
    {
        if (!Disabled)
        {
            OnClick.InvokeAsync(NavigationReference);
        }
    }
}